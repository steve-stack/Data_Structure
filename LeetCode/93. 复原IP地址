class Solution {
public:
    //当前是ip的第几个段 还剩下多少位可以用
    void Handle(int k,int remain,string s,vector<int> &lenArray,vector<string> &res)
    {
        // cout<<k<<' '<<remain <<' ';
        // for(int i = 0;i < 4;++i)
        //     cout<<lenArray[i];
        // cout<<' '<<endl;
        int min = 4 - k + 1,max = min * 3;
        if(remain < min || remain > max)//此法不通
            return;
        if(k == 4)
        {
            //如果剩余的满足条件，则添加
            int tmp = 0;
            int len = s.size();
            for(int i = len - remain;i < len;++i)    
                tmp = tmp * 10 + (s[i] - '0');
            if(tmp <= 255 && (remain < 2 || s[len - remain] != '0'))
            {
                lenArray[k - 1] = remain;
                int r = 0;
                string str;
                for(int i = 0;i < 4;++i)
                {
                    for(int j = 0;j < lenArray[i];++j)
                    {
                        str.push_back(s[r + j]);
                    }
                    r += lenArray[i];
                    if(i != 3)
                        str.push_back('.');
                }
                res.push_back(str);
            }
            return;
        }
        //从remain中取一位
        lenArray[k - 1] = 1;
        Handle(k + 1,remain - 1,s,lenArray,res);
        int startIdx = 0;
        for(int i = 0;i < k - 1;++i)
            startIdx += lenArray[i];
        if(remain >= 2 && s[startIdx] != '0')//取2位，则不全为0
        {
            lenArray[k - 1] = 2;
            Handle(k + 1,remain - 2,s,lenArray,res);
        }
        // cout<<remain<<" remain"<<k<<endl;
        if(remain < 3)
            return;
        //startIdx往后三位看是否大于255
        int tempValue = (s[startIdx] - '0') * 100 + (s[startIdx + 1] - '0') * 10 + (s[startIdx + 2] - '0');
        // cout<<tempValue<<" temp"<<startIdx<<endl;
        if(tempValue <= 255 && tempValue != 0 && s[startIdx] != '0')
        {
            lenArray[k - 1] = 3;
            Handle(k + 1,remain - 3,s,lenArray,res);
        }
    }
    vector<string> restoreIpAddresses(string s) {
        //ip分四段，每一段如果不考虑限制，可以取一位，两位或者三位。
        //限制：n - （4-k）*3
        vector<string> res;
        vector<int> lenArray;
        int n = s.size();
        if(n < 4)
            return res;
        for(int i = 0;i < 4;++i)
            lenArray.push_back(0);
        Handle(1,n,s,lenArray,res);
        return res;
    }
};
