/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* reverseBetween(struct ListNode* head, int m, int n){
    if(m == n)
        return head;
    struct ListNode* pre,*q,*late,*p,*res;
    res = (struct ListNode*)malloc(sizeof(struct ListNode));//加上一个辅助的节点，统一后面的操作
    res->next = head;
    
    pre = late = q = res;
    //拿到m以前的节点pre
    for(int i = 0;i < m - 1;++i)
        pre = pre->next;
    //中间的n-m个反转
    p = pre->next;
    q = p->next;
    //p往后走n - m个
    for(int i = 0;i < n - m;++i)
    {
        late = q->next;
        q->next = p;
        p = q;
        q = late;
    }
    pre->next->next = q;//尾巴接上
    pre->next = p;//头接上
    head = res->next;
    free(res);
    return head;
}