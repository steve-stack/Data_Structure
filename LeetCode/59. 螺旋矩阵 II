//思路跟前面一个螺旋矩阵差不多
class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> res;
        int flagValue = -1;
        int nowNum = 1,maxNum = n * n;//提前记录最大值，避免每次判断都算一次
        int i = 0,j = 0;
        for(i = 0;i < n;++i)
        {
            vector<int> tempVec;
            for(j = 0;j < n;++j)
                tempVec.push_back(flagValue);
            res.push_back(tempVec);
        }
        i = j = 0;
        res[i][j] = nowNum++;            
        while(nowNum <= maxNum)
        {
            while(j + 1 < n && res[i][j + 1] == flagValue)
                res[i][++j] = nowNum++;
            while(i + 1 < n && res[i + 1][j] == flagValue)
                res[++i][j] = nowNum++;
            while(j - 1 >= 0 && res[i][j - 1] == flagValue)
                res[i][--j] = nowNum++;
            while(i - 1 >= 0 && res[i - 1][j] == flagValue)
                res[--i][j] = nowNum++;
        }
        return res;
    }
};
